// Code generated by MockGen. DO NOT EDIT.
// Source: bind_card_service.go

// Package service is a generated GoMock package.
package service

import (
	service "go-practice/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIBindCardService is a mock of IBindCardService interface.
type MockIBindCardService struct {
	ctrl     *gomock.Controller
	recorder *MockIBindCardServiceMockRecorder
}

// MockIBindCardServiceMockRecorder is the mock recorder for MockIBindCardService.
type MockIBindCardServiceMockRecorder struct {
	mock *MockIBindCardService
}

// NewMockIBindCardService creates a new mock instance.
func NewMockIBindCardService(ctrl *gomock.Controller) *MockIBindCardService {
	mock := &MockIBindCardService{ctrl: ctrl}
	mock.recorder = &MockIBindCardServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBindCardService) EXPECT() *MockIBindCardServiceMockRecorder {
	return m.recorder
}

// BindCard mocks base method.
func (m *MockIBindCardService) BindCard(req *service.BindCardReq) (*service.BindCardRsp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BindCard", req)
	ret0, _ := ret[0].(*service.BindCardRsp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BindCard indicates an expected call of BindCard.
func (mr *MockIBindCardServiceMockRecorder) BindCard(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BindCard", reflect.TypeOf((*MockIBindCardService)(nil).BindCard), req)
}
