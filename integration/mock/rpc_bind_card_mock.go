// Code generated by MockGen. DO NOT EDIT.
// Source: rpc_bind_card.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIBindCardRpc is a mock of IBindCardRpc interface.
type MockIBindCardRpc struct {
	ctrl     *gomock.Controller
	recorder *MockIBindCardRpcMockRecorder
}

// MockIBindCardRpcMockRecorder is the mock recorder for MockIBindCardRpc.
type MockIBindCardRpcMockRecorder struct {
	mock *MockIBindCardRpc
}

// NewMockIBindCardRpc creates a new mock instance.
func NewMockIBindCardRpc(ctrl *gomock.Controller) *MockIBindCardRpc {
	mock := &MockIBindCardRpc{ctrl: ctrl}
	mock.recorder = &MockIBindCardRpcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBindCardRpc) EXPECT() *MockIBindCardRpcMockRecorder {
	return m.recorder
}

// BindCardRpc mocks base method.
func (m *MockIBindCardRpc) BindCardRpc(bindCardNo string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BindCardRpc", bindCardNo)
	ret0, _ := ret[0].(error)
	return ret0
}

// BindCardRpc indicates an expected call of BindCardRpc.
func (mr *MockIBindCardRpcMockRecorder) BindCardRpc(bindCardNo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BindCardRpc", reflect.TypeOf((*MockIBindCardRpc)(nil).BindCardRpc), bindCardNo)
}
